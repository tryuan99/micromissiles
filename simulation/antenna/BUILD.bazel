load("@pip_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "antenna",
    srcs = ["antenna.py"],
    deps = [requirement("numpy")],
)

py_binary(
    name = "antenna_single_reflection_path_main",
    srcs = ["antenna_single_reflection_path_main.py"],
    deps = [
        ":antenna",
        ":horn_antenna",
        ":patch_antenna",
        "//utils:constants",
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("numpy"),
        requirement("SciencePlots"),
    ],
)

py_library(
    name = "dipole_antenna",
    srcs = ["dipole_antenna.py"],
    deps = [
        ":antenna",
        requirement("numpy"),
        requirement("scipy"),
    ],
)

py_binary(
    name = "dipole_antenna_main",
    srcs = ["dipole_antenna_main.py"],
    deps = [
        ":dipole_antenna",
        "//utils:constants",
        "//utils/visualization:color_maps",
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("numpy"),
        requirement("SciencePlots"),
    ],
)

py_library(
    name = "horn_antenna",
    srcs = ["horn_antenna.py"],
    deps = [
        ":antenna",
        requirement("numpy"),
        requirement("scipy"),
    ],
)

py_binary(
    name = "horn_antenna_main",
    srcs = ["horn_antenna_main.py"],
    deps = [
        ":horn_antenna",
        "//utils:constants",
        "//utils/visualization:color_maps",
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("numpy"),
        requirement("SciencePlots"),
    ],
)

py_library(
    name = "isotropic_antenna",
    srcs = ["isotropic_antenna.py"],
    deps = [
        ":antenna",
        requirement("numpy"),
    ],
)

py_library(
    name = "patch_antenna",
    srcs = ["patch_antenna.py"],
    deps = [
        ":antenna",
        requirement("numpy"),
    ],
)

py_binary(
    name = "patch_antenna_main",
    srcs = ["patch_antenna_main.py"],
    deps = [
        ":patch_antenna",
        "//utils:constants",
        "//utils/visualization:color_maps",
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("numpy"),
        requirement("SciencePlots"),
    ],
)

py_library(
    name = "antenna_array",
    srcs = ["antenna_array.py"],
    deps = [
        ":antenna",
        ":isotropic_antenna",
        requirement("numpy"),
    ],
)

py_binary(
    name = "antenna_array_main",
    srcs = ["antenna_array_main.py"],
    deps = [
        ":antenna_array",
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("SciencePlots"),
    ],
)

py_test(
    name = "antenna_array_test",
    srcs = ["antenna_array_test.py"],
    deps = [
        ":antenna_array",
        requirement("absl-py"),
        requirement("numpy"),
    ],
)

py_library(
    name = "antenna_array_spectrum",
    srcs = ["antenna_array_spectrum.py"],
    deps = [
        ":antenna_array",
        requirement("numpy"),
    ],
)

py_library(
    name = "antenna_array_1d_spectrum",
    srcs = ["antenna_array_1d_spectrum.py"],
    deps = [
        ":antenna_array",
        ":antenna_array_spectrum",
        requirement("numpy"),
    ],
)

py_binary(
    name = "antenna_array_1d_spectrum_main",
    srcs = ["antenna_array_1d_spectrum_main.py"],
    deps = [
        ":antenna_array",
        ":antenna_array_1d_spectrum",
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("numpy"),
        requirement("SciencePlots"),
    ],
)

py_binary(
    name = "patch_antenna_design_main",
    srcs = ["patch_antenna_design_main.py"],
    deps = [
        requirement("absl-py"),
        requirement("numpy"),
    ],
)
