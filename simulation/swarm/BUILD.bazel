package(default_visibility = ["//visibility:public"])

cc_library(
    name = "agent",
    srcs = ["agent.cc"],
    hdrs = ["agent.h"],
    deps = [
        ":constants",
        ":state_history",
        "//simulation/swarm/proto:agent_cc_proto",
        "//simulation/swarm/proto:dynamic_config_cc_proto",
        "//simulation/swarm/proto:plotting_config_cc_proto",
        "//simulation/swarm/proto:state_cc_proto",
        "//simulation/swarm/proto:static_config_cc_proto",
        "@abseil-cpp//absl/strings:str_format",
        "@boost",
        "@eigen",
    ],
)

cc_library(
    name = "constants",
    srcs = ["constants.cc"],
    hdrs = ["constants.h"],
)

cc_test(
    name = "constants_test",
    srcs = ["constants_test.cc"],
    deps = [
        ":constants",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "model_agent",
    hdrs = ["model_agent.h"],
    deps = [
        ":agent",
        "//simulation/swarm/proto:state_cc_proto",
    ],
)

cc_test(
    name = "model_agent_test",
    srcs = ["model_agent_test.cc"],
    deps = [
        ":model_agent",
        "//simulation/swarm/proto:state_cc_proto",
        "@eigen",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "simulator",
    srcs = ["simulator.cc"],
    hdrs = ["simulator.h"],
    deps = [
        "//base:logging",
        "//simulation/swarm:agent",
        "//simulation/swarm/assignment",
        "//simulation/swarm/assignment:distance_assignment",
        "//simulation/swarm/missile:missile_factory",
        "//simulation/swarm/plotter:plotter_factory",
        "//simulation/swarm/proto:simulator_config_cc_proto",
        "//simulation/swarm/target:target_factory",
        "//utils:thread_pool",
    ],
)

cc_binary(
    name = "simulator_main",
    srcs = ["simulator_main.cc"],
    data = ["//simulation/swarm/configs/simulator:configs"],
    deps = [
        ":simulator",
        ":utils",
        "//base",
        "//base:commandlineflags",
        "//simulation/swarm/proto:simulator_config_cc_proto",
    ],
)

cc_library(
    name = "state_history",
    srcs = ["state_history.cc"],
    hdrs = ["state_history.h"],
    deps = ["//simulation/swarm/proto:state_cc_proto"],
)

cc_test(
    name = "state_history_test",
    srcs = ["state_history_test.cc"],
    deps = [
        ":state_history",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "swarm_simulator",
    srcs = ["swarm_simulator.cc"],
    hdrs = ["swarm_simulator.h"],
    deps = [
        ":simulator",
        "//simulation/swarm:utils",
        "//simulation/swarm/proto:simulator_config_cc_proto",
        "//simulation/swarm/proto:state_cc_proto",
        "//simulation/swarm/proto:swarm_config_cc_proto",
    ],
)

cc_binary(
    name = "swarm_simulator_main",
    srcs = ["swarm_simulator_main.cc"],
    data = ["//simulation/swarm/configs/swarm:configs"],
    deps = [
        ":swarm_simulator",
        ":utils",
        "//base",
        "//base:commandlineflags",
        "//simulation/swarm/proto:swarm_config_cc_proto",
    ],
)

cc_library(
    name = "utils",
    srcs = ["utils.cc"],
    hdrs = ["utils.h"],
    deps = [
        "@abseil-cpp//absl/strings:str_format",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "utils_test",
    srcs = ["utils_test.cc"],
    data = ["//simulation/swarm/configs/missile:configs"],
    deps = [
        ":utils",
        "//simulation/swarm/proto:static_config_cc_proto",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)
