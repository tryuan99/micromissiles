load("@pip_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "agent",
    srcs = ["agent.py"],
    deps = [
        ":constants",
        "//simulation/swarm/proto:missile_config_py_proto",
        "//simulation/swarm/proto:physical_config_py_proto",
        "//simulation/swarm/proto:plotting_config_py_proto",
        "//simulation/swarm/proto:state_py_proto",
        "//simulation/swarm/proto:target_config_py_proto",
        requirement("numpy"),
        requirement("scipy"),
    ],
)

py_test(
    name = "agent_test",
    srcs = ["agent_test.py"],
    deps = [
        ":agent",
        "//simulation/swarm/proto:state_py_proto",
        requirement("absl-py"),
        requirement("numpy"),
    ],
)

py_library(
    name = "constants",
    srcs = ["constants.py"],
    deps = [
        requirement("numpy"),
        requirement("scipy"),
    ],
)

py_library(
    name = "missile",
    srcs = ["missile.py"],
    deps = [
        ":agent",
        ":constants",
        ":sensor",
        ":target",
        "//simulation/swarm/proto:missile_config_py_proto",
        "//simulation/swarm/proto:sensor_py_proto",
        requirement("numpy"),
    ],
)

py_library(
    name = "plotter",
    srcs = ["plotter.py"],
    deps = [
        ":agent",
        "//simulation/swarm/proto:plotting_config_py_proto",
        requirement("matplotlib"),
        requirement("numpy"),
        requirement("SciencePlots"),
    ],
)

py_library(
    name = "sensor",
    srcs = ["sensor.py"],
    deps = [
        ":agent",
        "//simulation/swarm/proto:sensor_py_proto",
        requirement("numpy"),
    ],
)

py_test(
    name = "sensor_test",
    srcs = ["sensor_test.py"],
    deps = [
        ":agent",
        ":sensor",
        "//simulation/swarm/proto:state_py_proto",
        requirement("absl-py"),
        requirement("numpy"),
    ],
)

py_library(
    name = "simulator",
    srcs = ["simulator.py"],
    deps = [
        ":missile",
        ":plotter",
        ":target",
        ":target_assignment",
        "//simulation/swarm/proto:simulator_config_py_proto",
        requirement("absl-py"),
        requirement("numpy"),
    ],
)

py_binary(
    name = "simulator_main",
    srcs = ["simulator_main.py"],
    data = ["//simulation/swarm/configs:simulator_configs"],
    deps = [
        ":simulator",
        "//simulation/swarm/proto:simulator_config_py_proto",
        requirement("absl-py"),
        requirement("protobuf"),
    ],
)

py_library(
    name = "swarm_simulator",
    srcs = ["swarm_simulator.py"],
    deps = [
        ":simulator",
        "//simulation/swarm/proto:simulator_config_py_proto",
        "//simulation/swarm/proto:state_py_proto",
        "//simulation/swarm/proto:swarm_config_py_proto",
        requirement("numpy"),
    ],
)

py_binary(
    name = "swarm_simulator_main",
    srcs = ["swarm_simulator_main.py"],
    data = ["//simulation/swarm/configs:swarm_configs"],
    deps = [
        ":swarm_simulator",
        "//simulation/swarm/proto:swarm_config_py_proto",
        requirement("absl-py"),
        requirement("protobuf"),
    ],
)

py_library(
    name = "target",
    srcs = ["target.py"],
    deps = [
        ":agent",
        "//simulation/swarm/proto:target_config_py_proto",
    ],
)

py_library(
    name = "target_assignment",
    srcs = ["target_assignment.py"],
    deps = [
        ":missile",
        ":target",
        requirement("numpy"),
    ],
)

py_test(
    name = "target_assignment_test",
    srcs = ["target_assignment_test.py"],
    deps = [
        ":missile",
        ":target",
        ":target_assignment",
        "//simulation/swarm/proto:missile_config_py_proto",
        "//simulation/swarm/proto:target_config_py_proto",
        requirement("absl-py"),
    ],
)
